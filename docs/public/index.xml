<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dex.js</title>
    <link>http://example.org/index.xml</link>
    <description>Recent content on dex.js</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Dec 2016 13:37:53 -0500</lastBuildDate>
    <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>about</title>
      <link>http://example.org/about/</link>
      <pubDate>Wed, 28 Dec 2016 13:37:53 -0500</pubDate>
      
      <guid>http://example.org/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>examples</title>
      <link>http://example.org/examples/</link>
      <pubDate>Wed, 28 Dec 2016 13:37:49 -0500</pubDate>
      
      <guid>http://example.org/examples/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tutorials</title>
      <link>http://example.org/tutorials/</link>
      <pubDate>Wed, 28 Dec 2016 13:37:42 -0500</pubDate>
      
      <guid>http://example.org/tutorials/</guid>
      <description></description>
    </item>
    
    <item>
      <title>dex.js Introduction</title>
      <link>http://example.org/intro/</link>
      <pubDate>Wed, 28 Dec 2016 02:38:25 -0500</pubDate>
      
      <guid>http://example.org/intro/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;dex.js is a javascript framework for data visualization which incorporates
a diverse set of visualizations from a diverse set of HTML5 technologies
such as D3 and WebGL and wraps them in a simple and consistent interface.&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h2&gt;

&lt;h3 id=&#34;creating-a-chart&#34;&gt;Creating A Chart&lt;/h3&gt;

&lt;h4 id=&#34;step-1&#34;&gt;Step 1&lt;/h4&gt;

&lt;p&gt;Include the necessary scripts and stylesheets into your HTML page.  This is pretty much boilerplate.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;http://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.css&#34;&amp;gt;
&amp;lt;link rel=&#34;stylesheet&#34; href=&#34;http://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.theme.min.css&#34;&amp;gt;
&amp;lt;script src=&#34;http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#34;http://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#34;http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#34;http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&#34;dex.js&#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dex requires jquery, jquery-ui, underscore and D3 at a minimum.&lt;/p&gt;

&lt;h4 id=&#34;step-2&#34;&gt;Step 2&lt;/h4&gt;

&lt;p&gt;Provide a container for the chart somewhere within the body of the html document.&lt;/p&gt;

&lt;p&gt;The container is usually an SVG though there are a few exceptions.  Here we define an
svg for a Chord Diagram.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;svg id=&#34;ChordDiagram&#34;&amp;gt;&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;step-3&#34;&gt;Step 3&lt;/h4&gt;

&lt;p&gt;Next, provide some data.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;script&amp;gt;
  var csv = {
    header : [ &#39;Name&#39;, &#39;Gender&#39; ],
    data   : [
      [&#39;Todd&#39;, &#39;Male&#39;],
      [&#39;Mike&#39;, &#39;Male&#39;],
      [&#39;Jennifer&#39;, &#39;Female&#39;],
      [&#39;Patrick&#39;, &#39;Male&#39;]
    ]
  };
  // Script continues here...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Regardless of the visual, all dex.js components expect data in csv format.
dex.js also provides convenience functions for manipulating and generating
csv data.  More on this later.&lt;/p&gt;

&lt;h4 id=&#34;step-4&#34;&gt;Step 4&lt;/h4&gt;

&lt;p&gt;Configure the chart.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  var chord = new dex.charts.d3.Chord({
    &#39;parent&#39; : &#39;#ChordDiagram&#39;,
    &#39;csv&#39;    : csv
  });&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;step-5&#34;&gt;Step 5&lt;/h4&gt;

&lt;p&gt;Render the chart.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  chord.render();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see something like the following when you are through:&lt;/p&gt;

&lt;p&gt;&lt;svg id=&#34;ChordDiagram&#34; height=&#34;300&#34; width=&#34;300&#34;&gt;&lt;defs&gt;&lt;/defs&gt;&lt;/svg&gt;&lt;/p&gt;

&lt;h3 id=&#34;creating-charts-from-charts&#34;&gt;Creating Charts from Charts&lt;/h3&gt;

&lt;p&gt;In dex.js you can construct new charts from existing charts.  This is useful
when you wish to construct a number of related charts; for instance when
providing some sort of chart-multiples visualization.&lt;/p&gt;

&lt;p&gt;Ok, let&amp;rsquo;s get started.  First, let&amp;rsquo;s give it a container somewhere in our HTML document.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;svg id=&#34;ChordDiagram2&#34; height=&#34;300&#34; width=&#34;300&#34;&amp;gt;&amp;lt;/svg&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then lets make a verbatim copy of the chart into chord2.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var chord2 = new dex.charts.d3.Chord(chord);&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, let&amp;rsquo;s associate this chart with a distinct parent svg container and give
the chart it&amp;rsquo;s own personality.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chord2.attr(&#34;parent&#34;, &#34;#ChordDiagram2&#34;)
  .attr(&#34;tick.stroke.color&#34;, &#34;red&#34;)
  .attr(&#34;tick.stroke.width&#34;, &#34;15&#34;)
  .attr(&#34;links.mouseout.fill.fillOpacity&#34;, .1)
  .attr(&#34;links.mouseover.stroke.dasharray&#34;, &#34;2 2&#34;)
  .attr(&#34;links.mouseover.stroke.color&#34;, &#34;blue&#34;)
  .attr(&#34;links.mouseover.stroke.width&#34;, &#34;3&#34;)
  .attr(&#34;color&#34;, d3.scale.category10());&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that it&amp;rsquo;s configured properly, let&amp;rsquo;s render it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;chord2.render();&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;svg id=&#34;ChordDiagram2&#34; height=&#34;300&#34; width=&#34;300&#34;&gt;&lt;/svg&gt;&lt;/p&gt;

&lt;p&gt;alternately, we could have used chaining which is implicit in all dex
components to achieve this in a single line of code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var chord2 = new dex.charts.d3.Chord(chord)
  .attr(&#34;parent&#34;, &#34;#ChordDiagram2&#34;)
  .attr(&#34;tick.stroke.color&#34;, &#34;red&#34;)
  .attr(&#34;tick.stroke.width&#34;, &#34;15&#34;)
  .attr(&#34;links.mouseout.fill.fillOpacity&#34;, .1)
  .attr(&#34;links.mouseover.stroke.dasharray&#34;, &#34;2 2&#34;)
  .attr(&#34;links.mouseover.stroke.color&#34;, &#34;blue&#34;)
  .attr(&#34;links.mouseover.stroke.width&#34;, &#34;3&#34;)
  .attr(&#34;color&#34;, d3.scale.category10())
  .render();
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;chart-communication&#34;&gt;Chart Communication&lt;/h3&gt;

&lt;p&gt;Charts in isolation are of limited interest, when charts communicate with one
another, they become much more interesting.&lt;/p&gt;

&lt;h4 id=&#34;step-1-1&#34;&gt;Step 1&lt;/h4&gt;

&lt;p&gt;Providing containers for two charts.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;svg id=&#34;ChartTalk1&#34; height=500 width=400 horiz-align=&#34;left&#34;&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;svg id=&#34;ChartTalk2&#34; height=500 width=400 horiz-align=&#34;right&#34;&amp;gt;&amp;lt;/svg&amp;gt;&lt;/pre&gt;&lt;/code&gt;

### Step 2

Configure and render the charts.  We&#39;ll pick a parallel coordinates chart
for the first one and a dendrogram for the second one.

We will also use a csv containing U.S. President names with Party and state affiliations.

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var pc1 = new dex.charts.d3.ParallelCoordinates({
  &#39;parent&#39; : &#34;#ChartTalk1&#34;,
  &#39;csv&#39;    : presidents
});
pc1.render();
  
var dendrogram = new dex.charts.d3.Dendrogram({
  &#39;parent&#39; : &#34;#ChartTalk2&#34;,
  &#39;csv&#39;    : presidents,
  &#39;node.expanded.label.font.size&#39; : 8,
  &#39;connection.length&#39; : 100
});
dendrogram.render();&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-1&#34;&gt;Step 3&lt;/h3&gt;

&lt;p&gt;Lastly, we will configure the dendrogram to listen or subscribe to
to brush selection events on the parallel coordinates visual.
The dendrogram sets it&amp;rsquo;s data to only the selected subset of the
parallel coordinates.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;dendrogram.subscribe(pc1, &#34;select&#34;, function (msg) {
  dendrogram.attr(&#39;csv&#39;, msg.selected).update();
});&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;final-result&#34;&gt;Final Result&lt;/h3&gt;

&lt;p&gt;&lt;svg id=&#34;ChartTalk1&#34; height=500 width=400 horiz-align=&#34;left&#34;&gt;&lt;/svg&gt;
&lt;svg id=&#34;ChartTalk2&#34; height=500 width=400 horiz-align=&#34;right&#34;&gt;&lt;/svg&gt;&lt;/p&gt;

&lt;script&gt;
  var csv = {
    header : [ &#39;Name&#39;, &#39;Gender&#39; ],
    data   : [
      [&#39;Todd&#39;, &#39;Male&#39;],
      [&#39;Mike&#39;, &#39;Male&#39;],
      [&#39;Jennifer&#39;, &#39;Female&#39;],
      [&#39;Patrick&#39;, &#39;Male&#39;]
    ]
  };
  
  var presidents = dex.csv.columnSlice({
      &#39;header&#39; : [&#34;President&#34;, &#34;Party&#34;, &#34;Home State&#34;],
      &#39;data&#39;   : [
        [&#34;George Washington&#34;, &#34;Independent&#34;, &#34;Virginia&#34;],
        [&#34;John Adams&#34;, &#34;Federalist&#34;, &#34;Massachusetts&#34;],
        [&#34;Thomas Jefferson&#34;, &#34;Dem-Rep&#34;, &#34;Virginia&#34;],
        [&#34;James Madison&#34;, &#34;Dem-Rep&#34;, &#34;Virginia&#34;],
        [&#34;James Monroe&#34;, &#34;Dem-Rep&#34;, &#34;Virginia&#34;],
        [&#34;John Quincy Adams&#34;, &#34;Dem-Rep/Nat-Rep&#34;, &#34;Massachusetts&#34;],
        [&#34;Andrew Jackson&#34;, &#34;Democratic&#34;, &#34;Tennessee&#34;],
        [&#34;Martin Van Buren&#34;, &#34;Democratic&#34;, &#34;New York&#34;],
        [&#34;William Henry Harrison&#34;, &#34;Whig&#34;, &#34;Ohio&#34;],
        [&#34;John Tyler&#34;, &#34;Whig&#34;, &#34;Virginia&#34;],
        [&#34;James K. Polk&#34;, &#34;Democratic&#34;, &#34;Tennessee&#34;],
        [&#34;Zachary Taylor&#34;, &#34;Whig&#34;, &#34;Louisiana&#34;],
        [&#34;Millard Fillmore&#34;, &#34;Whig&#34;, &#34;New York&#34;],
        [&#34;Franklin Pierce&#34;, &#34;Democratic&#34;, &#34;New Hampshire&#34;],
        [&#34;James Buchanan&#34;, &#34;Democratic&#34;, &#34;Pennsylvania&#34;],
        [&#34;Abraham Lincoln&#34;, &#34;Republican/Nat-Union&#34;, &#34;Illinois&#34;],
        [&#34;Andrew Johnson&#34;, &#34;Democratic/Nat-Union&#34;, &#34;Tennessee&#34;],
        [&#34;Ulysses S. Grant&#34;, &#34;Republican&#34;, &#34;Ohio&#34;],
        [&#34;Rutherford B. Hayes&#34;, &#34;Republican&#34;, &#34;Ohio&#34;],
        [&#34;James A. Garfield&#34;, &#34;Republican&#34;, &#34;Ohio&#34;],
        [&#34;Chester A. Arthur&#34;, &#34;Republican&#34;, &#34;New York&#34;],
        [&#34;Grover Cleveland&#34;, &#34;Democratic&#34;, &#34;New York&#34;],
        [&#34;Benjamin Harrison&#34;, &#34;Republican&#34;, &#34;Indiana&#34;],
        [&#34;Grover Cleveland (2nd term)&#34;, &#34;Democratic&#34;, &#34;New York&#34;],
        [&#34;William McKinley&#34;, &#34;Republican&#34;, &#34;Ohio&#34;],
        [&#34;Theodore Roosevelt&#34;, &#34;Republican&#34;, &#34;New York&#34;],
        [&#34;William Howard Taft&#34;, &#34;Republican&#34;, &#34;Ohio&#34;],
        [&#34;Woodrow Wilson&#34;, &#34;Democratic&#34;, &#34;New Jersey&#34;],
        [&#34;Warren G. Harding&#34;, &#34;Republican&#34;, &#34;Ohio&#34;],
        [&#34;Calvin Coolidge&#34;, &#34;Republican&#34;, &#34;Massachusetts&#34;],
        [&#34;Herbert Hoover&#34;, &#34;Republican&#34;, &#34;Iowa&#34;],
        [&#34;Franklin D. Roosevelt&#34;, &#34;Democratic&#34;, &#34;New York&#34;],
        [&#34;Harry S. Truman&#34;, &#34;Democratic&#34;, &#34;Missouri&#34;],
        [&#34;Dwight D. Eisenhower&#34;, &#34;Republican&#34;, &#34;Texas&#34;],
        [&#34;John F. Kennedy&#34;, &#34;Democratic&#34;, &#34;Massachusetts&#34;],
        [&#34;Lyndon B. Johnson&#34;, &#34;Democratic&#34;, &#34;Texas&#34;],
        [&#34;Richard Nixon&#34;, &#34;Republican&#34;, &#34;California&#34;],
        [&#34;Gerald Ford&#34;, &#34;Republican&#34;, &#34;Michigan&#34;],
        [&#34;Jimmy Carter&#34;, &#34;Democratic&#34;, &#34;Georgia&#34;],
        [&#34;Ronald Reagan&#34;, &#34;Republican&#34;, &#34;California&#34;],
        [&#34;George H. W. Bush&#34;, &#34;Republican&#34;, &#34;Texas&#34;],
        [&#34;Bill Clinton&#34;, &#34;Democratic&#34;, &#34;Arkansas&#34;],
        [&#34;George W. Bush&#34;, &#34;Republican&#34;, &#34;Texas&#34;],
        [&#34;Barack Obama&#34;, &#34;Democratic&#34;, &#34;Illinois&#34;]
      ]
    }, [1, 2, 0]);
  
  var chord = new dex.charts.d3.Chord({
    &#39;parent&#39; : &#39;#ChordDiagram&#39;,
    &#39;csv&#39;    : csv});
  chord.render();
  
  var chord2 = new dex.charts.d3.Chord(chord)
    .attr(&#34;parent&#34;, &#34;#ChordDiagram2&#34;)
    .attr(&#34;tick.stroke.color&#34;, &#34;red&#34;)
    .attr(&#34;tick.stroke.width&#34;, &#34;15&#34;)
    .attr(&#34;links.mouseout.fill.fillOpacity&#34;, .1)
    .attr(&#34;links.mouseover.stroke.dasharray&#34;, &#34;2 2&#34;)
    .attr(&#34;links.mouseover.stroke.color&#34;, &#34;blue&#34;)
    .attr(&#34;links.mouseover.stroke.width&#34;, &#34;3&#34;)
    .attr(&#34;color&#34;, d3.scale.category10())
    .render();
    
  var pc1 = new dex.charts.d3.ParallelCoordinates({
    &#39;parent&#39; : &#34;#ChartTalk1&#34;,
    &#39;csv&#39;    : presidents
  });
  pc1.render();
  
  var dendrogram = new dex.charts.d3.Dendrogram({
    &#39;parent&#39; : &#34;#ChartTalk2&#34;,
    &#39;csv&#39;    : presidents,
    &#39;node.expanded.label.font.size&#39; : 8,
    &#39;connection.length&#39; : 100
  });
  dendrogram.render();
  
  dendrogram.subscribe(pc1, &#34;select&#34;, function (msg) {
      dendrogram.attr(&#39;csv&#39;, msg.selected).update();
  });
&lt;/script&gt;

&lt;h2 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;With a design where consistency, reusability and interoperability are first
class design concerns; it becomes easier to write single-purpose chart
components which gain the ability to interoperate with other single-purpose
charts.&lt;/p&gt;

&lt;p&gt;Here are a few example benefits of this approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Chart implementations no longer have to focus on things
such as legend implementation.  Instead, legends can be
first class components in their own right.  Legends, in turn
become reusable.&lt;/li&gt;
&lt;li&gt;Specialized chart implementations such as Motion Charts become
unnecessary.  Instead, dex offers a data player which allows all
charts to become motion charts with very little effort.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>helloworld</title>
      <link>http://example.org/helloworld/</link>
      <pubDate>Wed, 28 Dec 2016 00:14:39 -0500</pubDate>
      
      <guid>http://example.org/helloworld/</guid>
      <description>

&lt;h2 id=&#34;hello-world&#34;&gt;Hello World!&lt;/h2&gt;

&lt;p&gt;Hi, this is the first&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>main</title>
      <link>http://example.org/main/</link>
      <pubDate>Wed, 28 Dec 2016 00:13:29 -0500</pubDate>
      
      <guid>http://example.org/main/</guid>
      <description></description>
    </item>
    
    <item>
      <title>helloworld</title>
      <link>http://example.org/posts/helloworld/</link>
      <pubDate>Wed, 28 Dec 2016 00:12:58 -0500</pubDate>
      
      <guid>http://example.org/posts/helloworld/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>